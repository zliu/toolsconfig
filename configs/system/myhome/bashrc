# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# User specific aliases and functions
#alias rm='/home/zliu/tools/scripts/delete'
alias set1.8='pushd /home/zliu/disk2/sdk/oct-1.8/OCTEON-SDK-1.8.1;source env-setup OCTEON_CN56XX_PASS2;popd'
alias set2.3='pushd /home/zliu/disk2/sdk/oct-2.3;source env-setup OCTEON_CN61XX_PASS1_0;popd'
alias diff='colordiff --exclude .svn --exclude .git'
alias tree='tree -hNCF --du'
alias updp='vi ~/.bash_profile; source ~/.bash_profile'
alias updr='vi ~/.bashrc; source ~/.bashrc'
alias goagentstart='python /home/zliu/disk2/projects/goagent/local/proxy.py 1>/var/log/goagent.log 2>/var/log/goagent.err.log'
alias goagentstop='kill `ps aux|grep goagent |sed "s/\(.*\) *\(.*\) *.*/\2/"`'

# PS1 ：命令行提示符
export PS1="\n\[\e[1;32m\][\[\e[1;5;33m\]\u\[\e[35m\]@\[\e[1;31m\]\H \[\e[36m\] ----\d [\t]---- \[\e[0;36m\] \w \n|
| \W\[\e[32m\] ]\[\033[m\]\$ "

# PS2 ：延续命令行提示符
# PS3 ：脚本中select语句提示符
# PS4 ：调试模式下脚本命令提示符("set -x"提示所执行命令)
# PROMPT_COMMAND ：Bash shell在显示PS1提示符前所执行的命令
export PROMPT_COMMAND="PS_DATE=$(date +%Y年%m月%d日-%A-[%H:%M:%S])"
# 转义符号	意义
# \a	响铃(ASCII 0x07)
# \d	日期(格式：星期 月 日)
# \D{format}	以指定格式显示当前日期(格式字符串将传递给strftime()函数，若为空则使用本机标准格式)
# \e	ESC,(ASCII 0x1B)
# \h	本机名称(从左至右直到遇到'.')
# \H	本机名称
# \j	shell当前正在处理任务号
# \l	shell终端设备基本名称
# \n	换行(ASCII 0x0A)
# \r	回车(ASCII 0x0D)
# \s	shell名,$0的基本名
# \t	当前时间,24小时制,格式为HH:MM:SS
# \T	当前时间,12小时制,格式为HH:MM:SS
# \@	当前时间,12小时制,格式为HH:MM am｜pm
# \A	当前时间,24小时制,格式为HH:MM
# \u	当前用户名
# \v	Bash版本
# \V	Bash发行号(版本+补丁级别)
# \w	当前路径,$HOME将会被缩写为'~'
# \W	当前路径的基本名(最后一级文件夹),$HOME处理同上
# \!	当前命令的命令历史记录编号
# \#	当前命令的编号
# \$	如果当前用户ID为0(超级用户),则显示'#';否则显示'$'
# \nnn	八进制数值nnn对应的ASCII字符
# \\	反斜杠'\'
# \[	标识不打印字符串的开始
# \]	标识不打印字符串的结束

# 在shell中，可以通过转义序列[<attr>;<fgcolor>;<bgcolor>m设置文字的显示属性(可选择分别或组合设置显示属性/前景色/背景色)。
# 如果要还原字符显示方案(显示属性/前景色/背景色)为系统默认，可以使用'\033[m'完成。
# 
# attr控制文字的修饰效果(终端并一定全部支持)
# 0:默认; 1:加亮; 2:变暗; 4:下划线; 5:闪烁; 7:反色显示; 8:隐藏文字; 9:删除线
# fgcolor控制文本颜色
# 30:黑色; 31:红色; 32:绿色; 33:黄色; 34:蓝色; 35:紫色; 36:青色; 37:白色
# bgcolor控制文本颜色
# 40:黑色; 41:红色; 42:绿色; 43:黄色; 44:蓝色; 45:紫色; 46:青色; 47:白色
# 显示属性/前景色/背景色定义在不同的数值区间，这样作的好处是不用显示指明颜色的作用域，
# 系统也会从颜色数值推断出用户想要设置的究竟是属性/前景色／背景色。
# 例如，'\e[9;41m'是要设置显示属性和背景色，保持前景色不变;'\e34m‘仅设置前景色。

# 转义字符ESC的输入
# 
# shell中，如果想输入ESC(转义)字符，可以先按ctrl+v键后,再按下ESC键，系统会显示出'^['表示转义字符输入完成
# echo命令中，使用-e选项允许转义字符后，可以输入'\033'或'\e'表示转义符ESC
# printf命令中，直接使用'\033'即可表示转义符ESC
# 
# 光标控制
# 
# 同样，通过转义序列我们可以控制光标移动到指定位置
# 
# 以下(L),(C)分别表示行号/列号数值,(N)表示数字n
# 转义序列	跳转位置
# \033[(L);(C)H
# \033[(L);(C)f	跳转至第L行第C列
# \033[(N)A	光标向上移动n行
# \033[(N)B	光标向下移动n行
# \033[(N)C	光标向前移动n列
# \033[(N)D	光标向后移动n列
# \033[2J	清除屏幕并移动至(0,0)
# \033[K	删除至行尾
# \033[s	保存光标当前位置
# \033[u	恢复光标至保存位置
